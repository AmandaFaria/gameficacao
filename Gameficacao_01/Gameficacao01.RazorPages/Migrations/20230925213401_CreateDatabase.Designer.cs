// <auto-generated />
using System;
using Gameficacao01.RazorPages.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gameficacao01.RazorPages.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230925213401_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("EspecialidadeModel", b =>
                {
                    b.Property<int>("MedicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EspecialidadeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MedicoId", "EspecialidadeId");

                    b.HasIndex("EspecialidadeId");

                    b.ToTable("EspecialidadeMedico", (string)null);
                });

            modelBuilder.Entity("Gameficacao01.RazorPages.Models.ConsultaModel", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataHoraConsulta")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeMedicoConsulta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomePacienteConsulta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObservacoesConsulta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoConsulta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ConsultaId");

                    b.ToTable("Consultas", (string)null);
                });

            modelBuilder.Entity("Gameficacao01.RazorPages.Models.EspecialidadeModel", b =>
                {
                    b.Property<int?>("EspecialidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescricaoEspecialidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeEspecialidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EspecialidadeId");

                    b.ToTable("Especialidades", (string)null);
                });

            modelBuilder.Entity("Gameficacao01.RazorPages.Models.MedicoModel", b =>
                {
                    b.Property<int?>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EspecialidadeMedico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("HorarioDisponivel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeMedico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumRegistro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MedicoId");

                    b.ToTable("Medicos", (string)null);
                });

            modelBuilder.Entity("Gameficacao01.RazorPages.Models.PacienteModel", b =>
                {
                    b.Property<int?>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HistoricoMedico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomePaciente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumIdentificacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SobrenomePaciente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PacienteId");

                    b.ToTable("Pacientes", (string)null);
                });

            modelBuilder.Entity("Gameficacao01.RazorPages.Models.RecepcionistaModel", b =>
                {
                    b.Property<int?>("RecepcionistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeRecepcionista")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroIdenticacaoRecepcionista")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroTelefoneRecepcionista")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SobrenomeRecepcionista")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RecepcionistaId");

                    b.ToTable("Recepcionistas", (string)null);
                });

            modelBuilder.Entity("MedicoModel", b =>
                {
                    b.Property<int>("ConsultaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConsultaId", "MedicoId");

                    b.HasIndex("MedicoId");

                    b.ToTable("MedicoConsulta", (string)null);
                });

            modelBuilder.Entity("PacienteModel", b =>
                {
                    b.Property<int>("ConsultaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConsultaId", "PacienteId");

                    b.HasIndex("PacienteId");

                    b.ToTable("PacienteConsulta", (string)null);
                });

            modelBuilder.Entity("RecepcionistaModel", b =>
                {
                    b.Property<int>("ConsultaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecepcionistaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConsultaId", "RecepcionistaId");

                    b.HasIndex("RecepcionistaId");

                    b.ToTable("RecepcionistaConsulta", (string)null);
                });

            modelBuilder.Entity("EspecialidadeModel", b =>
                {
                    b.HasOne("Gameficacao01.RazorPages.Models.EspecialidadeModel", null)
                        .WithMany()
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameficacao01.RazorPages.Models.MedicoModel", null)
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicoModel", b =>
                {
                    b.HasOne("Gameficacao01.RazorPages.Models.ConsultaModel", null)
                        .WithMany()
                        .HasForeignKey("ConsultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameficacao01.RazorPages.Models.MedicoModel", null)
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PacienteModel", b =>
                {
                    b.HasOne("Gameficacao01.RazorPages.Models.ConsultaModel", null)
                        .WithMany()
                        .HasForeignKey("ConsultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameficacao01.RazorPages.Models.PacienteModel", null)
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecepcionistaModel", b =>
                {
                    b.HasOne("Gameficacao01.RazorPages.Models.ConsultaModel", null)
                        .WithMany()
                        .HasForeignKey("ConsultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameficacao01.RazorPages.Models.RecepcionistaModel", null)
                        .WithMany()
                        .HasForeignKey("RecepcionistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
